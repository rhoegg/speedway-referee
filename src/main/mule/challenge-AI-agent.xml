<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:racer-data-system-api="http://www.mulesoft.org/schema/mule/racer-data-system-api" xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:scorekeeper-system-api="http://www.mulesoft.org/schema/mule/scorekeeper-system-api" xmlns:race-data-system-api="http://www.mulesoft.org/schema/mule/race-data-system-api" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/race-data-system-api http://www.mulesoft.org/schema/mule/race-data-system-api/current/mule-race-data-system-api.xsd
http://www.mulesoft.org/schema/mule/scorekeeper-system-api http://www.mulesoft.org/schema/mule/scorekeeper-system-api/current/mule-scorekeeper-system-api.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/racer-data-system-api http://www.mulesoft.org/schema/mule/racer-data-system-api/current/mule-racer-data-system-api.xsd">
	<sub-flow name="startAIChallenge" doc:id="58bbdf97-aa89-480d-b0b8-d5ce2dd60c5f" >
		<set-variable value="#[now()]" doc:name="started" doc:id="8c9c9fa6-5139-4319-92e4-5c49e22682fb" variableName="started"/>
		<race-data-system-api:get-racer doc:name="Get Racer" doc:id="54221545-fccf-4bc9-8eb4-38150e3844af" config-ref="raceDataSystemApiConfig" id="#[payload.racerId]" target="racer"/>
		<ee:transform doc:name="Transform Message" doc:id="a6755add-a1a3-4314-a38d-ff1b4b15a539" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::Runtime
output application/json
---
{
	endpoint : vars.racer.baseUri,
	name: vars.racer.name,
	timeout: p("challenge.aiagent.speakname.timeout") as Number
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<scorekeeper-system-api:check-racer-name doc:name="Check Racer Name" doc:id="ad0ed6e3-5832-4433-a6bd-5c2cdceb54fe" config-ref="scorekeeperSystemApiConfig" target="checkNameResult">
			<error-mapping sourceType="HTTP:GATEWAY_TIMEOUT" targetType="APP:RACER_TIMEOUT" />
			<error-mapping sourceType="HTTP:BAD_GATEWAY" targetType="APP:UNREACHABLE_RACER_ENDPOINT" />
		</scorekeeper-system-api:check-racer-name>
		<validation:is-number numberType="FLOAT" doc:name="Check name score" doc:id="36f3b7f9-36f8-41ff-a61a-aef371ba8a53" value="#[vars.checkNameResult.score]" minValue="${challenge.aiagent.speakname.minScore}" message="#[&quot;The name similarity score $(vars.checkNameResult.score)/10 is too low, must be at least $(p('challenge.aiagent.speakname.minScore'))/10.&quot;]">
			<error-mapping sourceType="VALIDATION:INVALID_NUMBER" targetType="APP:SCORE_TOO_LOW" />
		</validation:is-number>
        <ee:transform doc:name="race entry data" doc:id="pqjjze" >
        <ee:variables>
            <ee:set-variable variableName="entry"><![CDATA[%dw 2.0
output application/json 
---
{
	racer: {
		name: payload.name,
		baseUri: payload.endpoint,
  	},
	active: true,
	started: vars.started,	
}]]>
            </ee:set-variable>
        </ee:variables>
    </ee:transform>
		<race-data-system-api:store-entry doc:name="Store Entry" doc:id="12beed64-f137-4785-a85a-9c9b23c8ee3c" config-ref="raceDataSystemApiConfig" id="#[vars.racer.racerId]" >
			<race-data-system-api:store-entry-request-data ><![CDATA[#[vars.entry]]]></race-data-system-api:store-entry-request-data>
		</race-data-system-api:store-entry>
		<race-data-system-api:increase-score-for-entry doc:name="Increase score for entry" doc:id="587efb19-57bc-4049-9e8a-587104df34ad" config-ref="raceDataSystemApiConfig" id="#[vars.racer.racerId]">
			<race-data-system-api:increase-score-for-entry-request-data ><![CDATA[#[{
	name: 1
}]]]></race-data-system-api:increase-score-for-entry-request-data>
		</race-data-system-api:increase-score-for-entry>
		<racer-data-system-api:update-challenge-start-date doc:name="Update challenge start date" doc:id="9b4e56e9-023c-49f3-aa37-86aeeb48932c" config-ref="Racer_Data_System_API_Config" sc-name="#[vars.entry.racer.name]" target="dateUpdate">
			<racer-data-system-api:update-challenge-start-date-request-data ><![CDATA[#[{
	name: now() as String {format: "yyyy-MM-dd"}
}]]]></racer-data-system-api:update-challenge-start-date-request-data>
		</racer-data-system-api:update-challenge-start-date>
		<ee:transform doc:name="Transform Message" doc:id="7237991d-5d94-49fe-9956-7024bea98e35" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	racerId: vars.racer.racerId,
	details: "successfully entered race", // what should we return to the front end here?
	challengeScore: {
			name: payload.challengeScore.name 	
	},
	score: payload.score,
	started: vars.started,
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<flow name="AIChallengeQuestion" doc:id="294fa81a-a2fb-428e-a950-882d170fd129" >
		<scheduler doc:name="Scheduler" doc:id="0c0d7594-362f-4567-b8d8-7300ed5b27b2" >
			<scheduling-strategy >
				<fixed-frequency timeUnit="MINUTES" startDelay="1" frequency='5'/>
			</scheduling-strategy>
		</scheduler>
		<scorekeeper-system-api:generate-formula-one-question doc:name="Generate Formula One Question" doc:id="0753fbb0-f523-4cb4-a78d-91fecc2af741" config-ref="scorekeeperSystemApiConfig" target="f1Question"/>
		<race-data-system-api:search-entries doc:name="Search Entries" doc:id="1e125f08-ec6a-4d4e-9527-75c88b4a0261" config-ref="raceDataSystemApiConfig" active="true"/>
		<flow-ref doc:name="questionBatchProcess" doc:id="91d55769-e33a-494d-a492-01abc25d2742" name="questionBatchProcess"/>
	</flow>
	<flow name="AIBiasChallenge" doc:id="775b6764-b577-494d-84da-5a8fbdb18bd8" >
		<scheduler doc:name="Scheduler" doc:id="087d0e58-04b1-45ad-a36e-5aa0ebb5b721">
			<scheduling-strategy>
				<fixed-frequency frequency="5" timeUnit="MINUTES" startDelay="2"/>
			</scheduling-strategy>
		</scheduler>
		<race-data-system-api:search-entries doc:name="Search Entries" doc:id="99edabf3-751a-4d27-a071-cc3408705a83" config-ref="raceDataSystemApiConfig" active="true" />
		<choice doc:name="Choice" doc:id="f79f969f-60ff-442c-ba11-4e96ed77f3e8" >
			<when expression="#[isEmpty(payload)]">
				<logger level="INFO" doc:name="Logger" doc:id="b50754c1-e2ac-4f2f-8ac4-e4095d68a6b5" message='#["No racers found to run bias challenge"]'/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="97671079-71dc-4707-bd2c-c9a53d1e332a" message='#["There are $(sizeOf(payload)) racers available for bias challenge"]'/>
				<try doc:name="Try article generation" doc:id="aef62e7b-1fa1-488a-8018-03435b881140">
					<scorekeeper-system-api:generate-articles doc:name="Generate Articles" doc:id="aef62e7b-1fa1-488a-8018-03435b881139" config-ref="scorekeeperSystemApiConfig" target="article" />
					<flow-ref doc:name="biasBatchProcess" doc:id="0b5c53d2-0cac-41a9-aa75-65c11363dff6" name="biasBatchProcess"/>
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="Skip batch on article failure" doc:id="aef62e7b-1fa1-488a-8018-03435b881141" type="SCOREKEEPER-SYSTEM-API:INTERNAL_SERVER_ERROR, SCOREKEEPER-SYSTEM-API:TIMEOUT, HTTP:TIMEOUT, HTTP:CONNECTIVITY, HTTP:INTERNAL_SERVER_ERROR">
							<logger level="ERROR" doc:name="Log article generation failure" doc:id="aef62e7b-1fa1-488a-8018-03435b881142" message='#["Article generation failed: $(error.description). Skipping bias challenge batch for this cycle. Will retry in 5 minutes."]'/>
						</on-error-continue>
					</error-handler>
				</try>
			</otherwise>
		</choice>
	</flow>
</mule>
